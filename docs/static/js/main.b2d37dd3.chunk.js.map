{"version":3,"sources":["MetaElement.js","CheckListItemElement.js","App.js","serviceWorker.js","index.js"],"names":["Meta","attributes","children","element","editor","useEditor","contentEditable","onClick","e","preventDefault","onKeyDown","type","placeholder","value","cooktime","onChange","event","path","ReactEditor","findPath","Editor","setNodes","target","at","serves","CheckListItemElement","readOnly","useReadOnly","checked","className","css","suppressContentEditableWarning","LIST_TYPES","CodeElement","props","HeadingElement","level","VideoElement","selected","useSelected","focused","useFocused","url","style","boxShadow","src","frameBorder","stopPropagation","marginTop","boxSizing","DefaultElement","Leaf","leaf","bold","italic","underlined","CustomEditor","isBoldMarkActive","nodes","match","mode","isCodeBlockActive","isBulletedListActive","isNumberedListActive","isHeadingBlockActive","isMetaBlockActive","isItalicMarkActive","isUnderlineMarkActive","App","useMemo","exec","isVoid","command","selection","isActive","split","isList","includes","format","console","log","f","unwrapNodes","wrapNodes","insertNodes","text","Range","isCollapsed","start","Point","equals","anchor","withCustom","withHistory","withReact","createEditor","useState","setSelection","setValue","renderElement","useCallback","MetaElement","renderLeaf","onMouseDown","ctrlKey","key","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2d37dd3.chunk.js","sourcesContent":["import React from 'react';\nimport { ReactEditor, useEditor } from 'slate-react'\nimport { Editor } from 'slate'\n\nconst Meta = ({ attributes, children, element }) => {\n  const handleClick = (e) => {\n    e.preventDefault()\n  }\n  const editor = useEditor()\n  return (\n    <div {...attributes} >\n      <div contentEditable={false} onClick={handleClick}>\n        <form>\n        <input\n          onKeyDown={e => e.preventDefault()}\n          onClick={e => e.preventDefault()}\n          type=\"text\"\n          placeholder=\"Cook Time\"\n          value={element.cooktime}\n          onChange={event => {\n          const path = ReactEditor.findPath(editor, element)\n            Editor.setNodes(\n              editor,\n              { cooktime:  event.target.value },\n              { at: path }\n            )\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Serves\"\n          onKeyDown={e => e.preventDefault()}\n          onClick={e => e.preventDefault()}\n          value={element.serves}\n          onChange={event => {\n            const path = ReactEditor.findPath(editor, element)\n            Editor.setNodes(\n              editor,\n              { serves:  event.target.value },\n              { at: path }\n            )\n          }}\n        />\n        </form>\n      </div>\n      {children}\n    </div>\n  )\n}\n\nexport default Meta\n","import React from 'react';\nimport { useReadOnly, useEditor, ReactEditor } from 'slate-react'\nimport { Editor } from 'slate'\nimport { css } from 'emotion'\n\nconst CheckListItemElement = ({ attributes, children, element }) => {\n  const editor = useEditor()\n  const readOnly = useReadOnly()\n  const { checked } = element\n  return (\n    <div\n      {...attributes}\n      className={css`\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        & + & {\n          margin-top: 0;\n        }\n      `}\n    >\n      <span\n        contentEditable={false}\n        className={css`\n          margin-right: 0.75em;\n        `}\n      >\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={event => {\n            const path = ReactEditor.findPath(editor, element)\n            Editor.setNodes(\n              editor,\n              { checked: event.target.checked },\n              { at: path }\n            )\n          }}\n        />\n      </span>\n      <span\n        contentEditable={!readOnly}\n        suppressContentEditableWarning\n        className={css`\n          flex: 1;\n          opacity: ${checked ? 0.666 : 1};\n          text-decoration: ${checked ? 'none' : 'line-through'};\n          &:focus {\n            outline: none;\n          }\n        `}\n      >\n        {children}\n      </span>\n    </div>\n  )\n}\n\nexport default CheckListItemElement\n","import React, { useMemo, useState, useCallback } from 'react';\n// Import the Slate editor factory.\nimport { createEditor, Editor, Range, Point } from 'slate'\n\n// Import the Slate components and React plugin.\nimport { Slate, Editable, withReact, useEditor,\n  useFocused,\n  useSelected } from 'slate-react'\nimport { withHistory } from 'slate-history'\nimport MetaElement from './MetaElement'\nimport CheckListItemElement from './CheckListItemElement'\nimport ReactJson from 'react-json-view'\n\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\n\nconst CodeElement = props => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  )\n}\n\nconst HeadingElement = props => {\n  const { level } = props.element\n\n  if (level === 1) {\n    return (\n      <h1 {...props.attributes}>\n        {props.children}\n      </h1>\n    )\n  } else if (level === 2) {\n    return (\n      <h2 {...props.attributes}>\n        {props.children}\n      </h2>\n    )\n  } else if (level === 3) {\n    return (\n      <h3 {...props.attributes}>\n        {props.children}\n      </h3>\n    )\n  }\n}\n\nconst VideoElement = ({ attributes, children, element }) => {\n  const editor = useEditor()\n  const selected = useSelected()\n  const focused = useFocused()\n  const { url } = element\n  return (\n    <div {...attributes}>\n      <div\n        contentEditable={false}\n        style={{\n          boxShadow: selected && focused ? '0 0 0 3px #B4D5FF' : 'none',\n        }}\n      >\n        <iframe\n          src={`${url}?title=0&byline=0&portrait=0`}\n          frameBorder=\"0\"\n        />\n        <input\n          value={url}\n          onClick={e => e.stopPropagation()}\n          style={{\n            marginTop: '5px',\n            boxSizing: 'border-box',\n          }}\n          onKeyDown={e => e.stopPropagation()}\n          onChange={value => {\n            const path = editor.findPath(element)\n            Editor.setNodes(editor, { url: value }, { at: path })\n          }}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n\nconst DefaultElement = props => {\n  return <p {...props.attributes}>{props.children}</p>\n}\n\n// Define a React component to render leaves with bold text.\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>\n  }\n\n  if (leaf.underlined) {\n    children = <u>{children}</u>\n  }\n\n  return <span {...attributes}>{children}</span>\n}\n\n\nconst withCustom = editor => {\n  const { exec, isVoid } = editor\n\n  editor.exec = command => {\n    const { selection } = editor\n    // Define a command to toggle the bold  formatting.\n    if (command.type === 'toggle_bold_mark') {\n      const isActive = CustomEditor.isBoldMarkActive(editor)\n      Editor.setNodes(\n        editor,\n        { bold: isActive ? null : true },\n        { match: 'text', split: true }\n      )\n    }\n\n    // Define a command to toggle the bold  formatting.\n    else if (command.type === 'toggle_italic_mark') {\n      const isActive = CustomEditor.isItalicMarkActive(editor)\n      Editor.setNodes(\n        editor,\n        { italic: isActive ? null : true },\n        { match: 'text', split: true }\n      )\n    }\n\n    else if (command.type === 'toggle_underline_mark') {\n      const isActive = CustomEditor.isUnderlineMarkActive(editor)\n      Editor.setNodes(\n        editor,\n        { underlined: isActive ? null : true },\n        { match: 'text', split: true }\n      )\n    }\n\n\n    // Define a command to toggle the code block formatting.\n    else if (command.type === 'toggle_code_block') {\n      const isActive = CustomEditor.isCodeBlockActive(editor)\n      Editor.setNodes(\n        editor,\n        { type: isActive ? null : 'code' },\n        { match: 'block' }\n      )\n    }\n\n    else if (command.type === 'toggle_bulletedlist_block') {\n      const isList = LIST_TYPES.includes(command.format)\n      const isActive = CustomEditor.isBulletedListActive(editor)\n      console.log(command.format)\n      for (const f of LIST_TYPES) {\n        Editor.unwrapNodes(editor, { match: { type: f }, split: true })\n      }\n\n      Editor.setNodes(editor, {\n        type: isActive ? 'paragraph' : isList ? 'list-item' : command.format,\n      })\n\n      if (!isActive && isList) {\n        Editor.wrapNodes(editor, { type: command.format, children: [] })\n      }\n    }\n\n    else if (command.type === 'toggle_numberedlist_block') {\n      const isList = LIST_TYPES.includes(command.format)\n      const isActive = CustomEditor.isBulletedListActive(editor)\n\n      for (const f of LIST_TYPES) {\n        Editor.unwrapNodes(editor, { match: { type: f }, split: true })\n      }\n\n      Editor.setNodes(editor, {\n        type: isActive ? 'paragraph' : isList ? 'list-item' : command.format,\n      })\n\n      if (!isActive && isList) {\n        Editor.wrapNodes(editor, { type: command.format, children: [] })\n      }\n    }\n\n    else if (command.type === 'toggle_heading_block') {\n      const isActive = CustomEditor.isHeadingBlockActive(editor, command.level)\n      Editor.setNodes(\n        editor,\n        { type: isActive ? null : 'heading', level: command.level },\n        { match: 'block' }\n      )\n    }\n\n    else if (command.type === 'toggle_checklist_block') {\n      Editor.insertNodes(\n        editor,\n        {\n          type: 'check-list-item',\n          checked: false,\n          children: [{ text: 'abcd' }]\n        }\n      )\n    }\n\n\n    else if (command.type === 'toggle_meta_block') {\n      const meta = {\n        type: 'meta-block',\n        cooktime: 3,\n        serves: 4,\n        children: [{ text: '' }]\n      }\n      Editor.insertNodes(editor, meta)\n    }\n\n    else if (\n      command.type === 'delete_backward' &&\n      selection &&\n      Range.isCollapsed(selection)\n    ) {\n      const [match] = Editor.nodes(editor, {\n        match: { type: 'check-list-item' },\n      })\n\n      if (match) {\n        const [, path] = match\n        const start = Editor.start(editor, path)\n        if (Point.equals(selection.anchor, start)) {\n          Editor.setNodes(\n            editor,\n            { type: 'paragraph' },\n            { match: { type: 'check-list-item' } }\n          )\n          return\n        } else {\n          exec(command)\n        }\n      } else {\n        exec(command)\n      }\n    }\n\n    // Otherwise, fall back to the built-in `exec` logic for everything else.\n    else {\n      exec(command)\n    }\n  }\n\n  editor.isVoid = element => {\n    return element.type === 'meta-block' || element.type === 'video' ? true : isVoid(element)\n  }\n\n  return editor\n}\n\n// Define our own custom set of helpers for active-checking queries.\nconst CustomEditor = {\n  isBoldMarkActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { bold: true },\n      mode: 'all',\n    })\n\n    return !!match\n  },\n\n  isCodeBlockActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { type: 'code' },\n      mode: 'highest',\n    })\n\n    return !!match\n  },\n\n  isBulletedListActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { type: 'bulleted-list' },\n      mode: 'all',\n    })\n\n    return !!match\n  },\n\n  isNumberedListActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { type: 'numbered-list' },\n      mode: 'all',\n    })\n\n    return !!match\n  },\n\n  isHeadingBlockActive(editor, level) {\n    const [match] = Editor.nodes(editor, {\n      match: { type: 'heading', level },\n      mode: 'highest',\n    })\n\n    return !!match\n  },\n\n  isMetaBlockActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { type: 'meta-block' },\n      mode: 'all',\n    })\n\n    return !!match\n  },\n\n  isItalicMarkActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { italic: true },\n      mode: 'all'\n    })\n\n    return !!match\n  },\n\n  isUnderlineMarkActive(editor) {\n    const [match] = Editor.nodes(editor, {\n      match: { underlined: true },\n      mode: 'all'\n    })\n\n    return !!match\n  }\n}\n\nconst App = () => {\n  const editor = useMemo(\n    () => withCustom(withHistory(withReact(createEditor()))),\n    []\n  )\n  const [selection, setSelection] = useState(null)\n  const [value, setValue] = useState([\n    {\n      type: 'paragraph',\n      children: [{ text: 'A line of text in a paragraph.' }],\n    }\n  ])\n\n  const renderElement = useCallback(props => {\n    console.log(props.element.type)\n    switch (props.element.type) {\n      case 'code':\n        return <CodeElement {...props} />\n      case 'meta-block':\n        return <MetaElement {...props} />\n      case 'check-list-item':\n        return <CheckListItemElement {...props} />\n      case 'video':\n        return <VideoElement {...props} />\n      case 'heading':\n        return <HeadingElement {...props} />\n      case 'bulleted-list':\n        return <ul {...props.attributes}>{props.children}</ul>\n      case 'list-item':\n        return <li {...props.attributes}>{props.children}</li>\n      case 'numbered-list':\n        return <ol {...props.attributes}>{props.children}</ol>\n      default:\n        return <DefaultElement {...props} />\n    }\n  }, [])\n\n  const renderLeaf = useCallback(props => {\n    return <Leaf {...props} />\n  }, [])\n\n  return (\n    <>\n    <Slate\n      editor={editor}\n      value={value}\n      selection={selection}\n      onChange={(value, selection) => {\n        setValue(value)\n        setSelection(selection)\n      }}\n    >\n      <div>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_heading_block', level: 1 })\n          }}\n        >\n          heading\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_heading_block', level: 2 })\n          }}\n        >\n          heading 2\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_heading_block', level: 3 })\n          }}\n        >\n          heading 3\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_bold_mark' })\n          }}\n        >\n          Bold\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_code_block' })\n          }}\n        >\n          Code Block\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_italic_mark' })\n          }}\n        >\n          Italic\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_underline_mark' })\n          }}\n        >\n          underline\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_checklist_block' })\n          }}\n        >\n          check list\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_meta_block' })\n          }}\n        >\n          Meta Block\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_bulletedlist_block', format: 'bulleted-list' })\n          }}\n        >\n          Ordered List\n        </button>\n        <button\n          onMouseDown={event => {\n            event.preventDefault()\n            editor.exec({ type: 'toggle_numberedlist_block', format: 'numbered-list' })\n          }}\n        >\n          Numbered List\n        </button>\n      </div>\n      <Editable\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        onKeyDown={event => {\n          // event.preventDefault()\n          if (!event.ctrlKey) {\n            return\n          }\n          switch (event.key) {\n            case '`': {\n              event.preventDefault()\n              editor.exec({ type: 'toggle_code_block' })\n              break\n            }\n\n            case 'b': {\n              event.preventDefault()\n              editor.exec({ type: 'toggle_bold_mark' })\n              break\n            }\n            default:\n          }\n        }}\n      />\n    </Slate>\n    <br />\n    <br />\n    <br />\n    <br />\n    <ReactJson src={value} />\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}